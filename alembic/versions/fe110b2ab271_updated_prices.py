"""updated prices

Revision ID: fe110b2ab271
Revises: 04fe6d4ca12d
Create Date: 2025-08-21 13:43:29.242262

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fe110b2ab271'
down_revision: Union[str, Sequence[str], None] = '04fe6d4ca12d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_users_id'), table_name='users')
    op.drop_table('users')
    op.alter_column('prices', 'symbol',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('prices', 'currency',
               existing_type=sa.VARCHAR(length=10),
               nullable=True,
               existing_server_default=sa.text("'usd'::character varying"))
    op.alter_column('prices', 'price',
               existing_type=sa.NUMERIC(precision=18, scale=8),
               type_=sa.Float(),
               nullable=True)
    op.alter_column('prices', 'fetched_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.drop_constraint(op.f('uq_prices_symbol_currency_fetched_at'), 'prices', type_='unique')
    op.create_unique_constraint(op.f('uq_prices_symbol'), 'prices', ['symbol', 'currency', 'fetched_at'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_prices_symbol'), 'prices', type_='unique')
    op.create_unique_constraint(op.f('uq_prices_symbol_currency_fetched_at'), 'prices', ['symbol', 'currency', 'fetched_at'], postgresql_nulls_not_distinct=False)
    op.alter_column('prices', 'fetched_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('prices', 'price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=18, scale=8),
               nullable=False)
    op.alter_column('prices', 'currency',
               existing_type=sa.VARCHAR(length=10),
               nullable=False,
               existing_server_default=sa.text("'usd'::character varying"))
    op.alter_column('prices', 'symbol',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###
